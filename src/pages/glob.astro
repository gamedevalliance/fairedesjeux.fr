---
import type { Chapter, ContentType, Course } from "$data"
import { getSlugsFromFilePath } from "$utils"
import type { AstroGlobal, Page } from "astro"

/**
 * A standardized way to get all Static Paths of a given content type.
 * ==============================================
 * Temporarily moved from `src/utils/glob.ts`,
 * see this issue -> https://github.com/withastro/astro/issues/5552
 * @param Astro needed to use Astro.glob<t> inside a TypeScript file
 * @param contentType what's the type of content needed ?
 * @returns A promise of an array with all Static Paths
 */
export async function getStaticPathFromContentType(
	Astro: Readonly<AstroGlobal>,
	contentType: ContentType
) {
	switch (contentType) {
		case "Course":
			const courses = await Astro.glob<Course>("../../content/**/index.mdx")
			return courses.map((course) => ({
				params: {
					course: getSlugsFromFilePath(course.file).course,
				},
				props: {
					content: course,
				},
			}))

		case "Chapter":
			const chapters = await Astro.glob<Chapter>(`../../content/**/**/chapter.mdx`)
			return chapters.map((chapter) => {
				const chapterSlugs = getSlugsFromFilePath(chapter.file)
				return {
					params: {
						course: chapterSlugs.course,
						chapter: chapterSlugs.chapter,
					},
					props: {
						content: chapter,
					},
				}
			})

		case "Page":
			const pages = await Astro.glob<Page>(`../../content/**/**/**.mdx`)

			return pages.map((page) => {
				const pageSlugs = getSlugsFromFilePath(page.file)
				return {
					params: {
						course: pageSlugs.course,
						chapter: pageSlugs.chapter,
						page: pageSlugs.page,
					},
					props: {
						content: page,
					},
				}
			})

		default:
			throw new Error(
				`[getStaticPathFromContentType] contentType not yet implemented: ${contentType}`
			)
	}
}
---
